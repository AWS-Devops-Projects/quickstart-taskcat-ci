AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This template creates KMS Key and use that key to create Secure string
  parameter in AWS Systems Manager. (qs-1s0ouua26)
Parameters:
  GitHubOAuthToken:
    Description: GitHub OAuth Token
    Type: String
    NoEcho: 'true'
  GitHubOAuthTokenId:
    Description: GitHub OAuth Token Identifier
    Type: String
    Default: GithubToken_default
  LambdaZipsBucket:
    Description: Bucket name containing lambda zip files
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/).
    Default: quickstart-taskcat-ci/
    Description: >-
      S3 key prefix for the Quick Start assets. Quick Start key prefix can
      include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
Resources:
  KMSKey:
    Type: 'AWS::KMS::Key'
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - EIAMPolicyResourceWildcard
            - EIAMPolicyActionWildcard
            - EIAMPolicyWildcardResource
          ignore_reasons:
            EIAMPolicyResourceWildcard: This is the default KMS key policy."
            EIAMPolicyActionWildcard: This is the default KMS key policy."
            EIAMPolicyWildcardResource: Circular dependecy
    Properties:
      Description: >-
        Used to encrypt/decrypt secure string parameters in AWS Systems manager
        parameter store
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: '*'
          - Sid: Allow access for Key Administrators
            Effect: Allow
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/Admin
            Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:TagResource
              - kms:UntagResource
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
            Resource: '*'
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/Admin
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: '*'
          - Sid: Allow attachment of persistent resources
            Effect: Allow
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/Admin
            Action:
              - kms:CreateGrant
              - kms:ListGrants
              - kms:RevokeGrant
            Resource: '*'
            Condition:
              Bool:
                kms:GrantIsForAWSResource: 'true'
          - Sid: AllowUseOfTheKey
            Effect: Allow
            Principal:
              AWS: '*'
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: '*'
            Condition:
              StringEquals:
                kms:ViaService: !Sub secretsmanager.${AWS::Region}.amazonaws.com
                kms:CallerAccount: !Ref AWS::AccountId

  CreateSecureStringParameterKeyRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Path: /
      Policies:
        - PolicyName: ssm-createParam
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'kms:Encrypt'
                  - 'kms:Decrypt'
                Resource:
                  - !GetAtt
                    - KMSKey
                    - Arn
              - Effect: Allow
                Action:
                  - ssm:PutParameter
                  - ssm:DeleteParameter
                Resource:
                  - !Sub 'arn:${AWS::Partition}:ssm:us-east-2:123456789012:parameter/${GitHubOAuthTokenId}'
  CreateSSMParamLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      Handler: ssm.lambda_handler
      MemorySize: 128
      Role: !GetAtt
        - CreateSecureStringParameterKeyRole
        - Arn
      Runtime: python3.6
      Timeout: 300
      Code:
        S3Bucket: !Ref LambdaZipsBucket
        S3Key: !Sub '${QSS3KeyPrefix}functions/package/lambda.zip'
  CreateSSMParam:
    Type: 'AWS::CloudFormation::CustomResource'
    Version: '1.0'
    Properties:
      ServiceToken: !GetAtt
        - CreateSSMParamLambda
        - Arn
      GITHUB_TOKEN_ID: !Ref GitHubOAuthTokenId
      GITHUB_TOKEN: !Ref GitHubOAuthToken
      KMS_KEY_ID: !Ref KMSKey
Outputs:
  KMSKeyArn:
    Description: KMS Key ARN
    Value: !GetAtt
      - KMSKey
      - Arn
